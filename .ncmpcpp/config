mpd_music_dir = "~/Music/"

user_interface = "classic"
progressbar_look = "━━ "

##### song format #####
##
## for song format you can use:
##
## %l - length
## %f - filename
## %D - directory
## %a - artist
## %A - album artist
## %t - title
## %b - album
## %y - year
## %n - track number (01/12 -> 01)
## %N - full track info (01/12 -> 01/12)
## %g - genre
## %c - composer
## %p - performer
## %d - disc
## %C - comment
## $R - begin right alignment
##
## you can also put them in { } and then it will be displayed
## only if all requested values are available and/or define alternate
## value with { }|{ } eg. {%a - %t}|{%f}
##
## Note: If you want to set limit on maximal length of a tag, just
## put the appropriate number between % and character that defines
## tag type, e.g. to make album take max. 20 terminal cells, use '%20b'.
##
## Note: Format that is similar to "%a - %t" (i.e. without any additional
## braces) is equal to "{%a - %t}", so if one of the tags is missing,
## you'll get nothing.

## text can also have different color than the main window has,
## eg. if you want length to be green, write $3%l$9
##
## available values:
##
## - 0 - default window color (discards all other colors)
## - 1 - black
## - 2 - red
## - 3 - green
## - 4 - yellow
## - 5 - blue
## - 6 - magenta
## - 7 - cyan
## - 8 - white
## - 9 - end of current color(30)[red]{b}
##
## Note: colors can be nested.
##

##
## Note: Below variables are for alternative version of user's interface.
## Their syntax supports all tags and colors listed above plus some extra
## markers used for text attributes. They are followed by character '$'.
## After that you can put:
##
## - b - bold text
## - u - underline text
## - r - reverse colors
## - a - use alternative character set
##
## If you don't want to use an attribute anymore, just put it again, but
## this time insert character '/' between '$' and attribute character,
## e.g. {$b%t$/b}|{$r%f$/r} will display bolded title tag or filename
## with reversed colors.
##

##
## syntax of song columns list format is "column column etc."
##
## - syntax for each column is:
##
## (width of column)[column's color]{displayed tag}
##
## Note: Width is by default in %, if you want a column to
## have fixed size, add 'f' after the value, e.g. (10)[white]{a}
## will be the column that take 10% of screen (so the real column's
## width will depend on actual screen size), whereas (10f)[white]{a}
## will take 10 terminal cells, no matter how wide the screen is.
##
## - color is optional (if you want the default one, type [])
##
## Note: You can give a column additional attributes by putting appropriate
## character after displayed tag character. Available attributes are:
##
## - r - column will be right aligned
## - E - if tag is empty, empty tag marker won't be displayed
##
## You can also:
##
## - give a column custom name by putting it after attributes,
##   separated with character ':', e.g. {lr:Length} gives you
##   right aligned column of lengths named "Length".
##
## - define sequence of tags, that have to be displayed in case
##   predecessor is empty in a way similar to the one in classic
##   song format, i.e. using '|' character, e.g. {a|c|p:Owner}
##   creates column named "Owner" that tries to display artist
##   tag and then composer and performer if previous ones are
##   not available.

##### various settings #####
##
## Note: Custom command that will be executed each
## time song changes. Useful for notifications etc.
##
## Attention: It doesn't support song format anymore.
## Use `ncmpcpp --now-playing SONG_FORMAT` instead.

alternative_header_first_line_format = "$8$aqqu$/a$9 $2{%t}|{%f}$9 $8$atqq$/a$9"
alternative_header_second_line_format = "$8$aqqu$/a$9 $3{%b}|{%f}$9 $8$atqq$/a$9"

song_list_format = "{$5%a} $6»$8»$5» {$8%t}|{$8%f}$R{$6%b}"
#song_list_format = "$1• $8%t $1by $2%a$2 $R$1%l"
song_status_format = "$8%t"

now_playing_prefix = "$b$8»$2»$4»$3» "
/* now_playing_prefix = "$b$2> " */
now_playing_suffix = "$8$/b"

## song_columns_list_format = "(8f)[black]{l}  (32)[red]{a} (42)[yellow]{t|f} (18)[magenta]{b}"
song_columns_list_format = "(10)[black]{l} (30)[blue]{a} (30)[green]{b} (30)[magenta]{t}"
## song_columns_list_format = "(5)[]{} (22)[red]{a} (20)[white]{t|f} (49)[blue]{b} (4)[red]{l}"


mouse_support = "no"
header_visibility = "no"
statusbar_visibility = "yes"
playlist_display_mode = "classic" (classic/columns)
autocenter_mode = "yes"
titles_visibility = "no"
enable_window_title = "yes"

## Note: You can specify third character which will
## be used to build 'empty' part of progressbar.

default_place_to_search_in = "database"

ignore_leading_the = "yes"

##### colors definitions #####
#
colors_enabled = "yes"
#
empty_tag_color = "white"
#
header_window_color = "white"
#
volume_color = "blue"
#
state_line_color = "white"
#
state_flags_color = "white"
#
main_window_color = "blue"

current_item_prefix = "$(blue)$r"
current_item_suffix = "$/r$(end)"
progressbar_color = "black"
progressbar_elapsed_color = "green"
statusbar_color = "red"
alternative_ui_separator_color = "white"
current_item_inactive_column_prefix = "$(white)$r"
current_item_inactive_column_suffix = "$/r$(end)"
active_window_border = "red"
#
